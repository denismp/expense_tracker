"""
Django settings for expense_tracker project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

from dotenv import load_dotenv
import os

# Load environment variables from .env file
load_dotenv()

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': os.getenv('DB_PORT'),
    }
}

# Build paths inside the project like this: BASE_DIR / 'subdir'.
try:
    BASE_DIR = Path(__file__).resolve(strict=True).parent.parent
    if 'site-packages' in str(BASE_DIR):
        BASE_DIR = Path(__file__).resolve().parent  # Adjust for installed package
except Exception:
    BASE_DIR = Path(__file__).resolve().parent.parent

# Determine if running from installed package or local repo
PACKAGE_PREFIX = 'expense_tracker' if 'site-packages' in str(BASE_DIR) else ''

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

SECRET_KEY = 'django-insecure-1b=937ambjdl8y6x2)o@iv(abx(99x(-+%j2*hjm@xuob%ex=-'

DEBUG = True

ALLOWED_HOSTS = []

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # f'{PACKAGE_PREFIX}.apps.accounts' if PACKAGE_PREFIX else 'apps.accounts',
    # f'{PACKAGE_PREFIX}.apps.expenses' if PACKAGE_PREFIX else 'apps.expenses',
    'expense_tracker.apps.accounts',
    'expense_tracker.apps.expenses',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'expense_tracker.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates' if 'site-packages' in str(BASE_DIR) else BASE_DIR / 'expense_tracker' / 'templates',
            BASE_DIR / 'apps' / 'accounts' / 'templates' if 'site-packages' in str(BASE_DIR) else BASE_DIR / 'expense_tracker' / 'apps' / 'accounts' / 'templates',
            BASE_DIR / 'apps' / 'expenses' / 'templates' if 'site-packages' in str(BASE_DIR) else BASE_DIR / 'expense_tracker' / 'apps' / 'expenses' / 'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'expense_tracker.wsgi.application'

# Database
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
import os

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME', 'expensetracker'),
        'USER': os.getenv('DB_USER', 'expense_user'),
        'PASSWORD': os.getenv('DB_PASSWORD', ''),
        'HOST': os.getenv('DB_HOST', 'localhost'),
        'PORT': os.getenv('DB_PORT', '5432'),
    }
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files
STATIC_URL = 'static/'

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'accounts.CustomUser'
LOGIN_REDIRECT_URL = '/expenses/'
TEMPLATES[0]['OPTIONS']['debug'] = True
